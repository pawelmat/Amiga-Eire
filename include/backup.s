
; ------------------------------------------
; init scroll 16x16
scrollInit:
		move.l	mem_bss_chip(pc),a6
		move.l	a6,d0										; set scroll bpl addr
		addi.l	#Scroll_buffer,d0
		move.l	d0,a3
		lea		copper_scroll_scr_bpls,a2
		move	d0,6(a2)
		swap	d0
		move	d0,2(a2)		

		move.l	mem_bss_public(pc),a5
		adda.l	#Font_16_aligned,a5
		move.l	a5,a2
		lea		font_16_15_1,a4
		moveq	#0,d0
		moveq	#59-1,d7							; nr of fonts
.fntPrep:											; align fonts with all words of each letter next to each other
		.FOFS:	SET 0
		REPT	15
		move	.FOFS(a4),(a5)+
		.FOFS:	SET .FOFS+118
		ENDR
		move	d0,(a5)+
		lea		2(a4),a4
		dbf		d7,.fntPrep

		lea		scroll_text,a1
	move.b	#0,20(a1)
.siLoop:
		moveq	#0,d0
		move.b	(a1)+,d0
		beq		.siEnd
		subi	#32,d0				; space
		lsl		#5,d0
		lea		(a2,d0.w),a4
		.FOFS:	SET 0
		REPT	15
		move	(a4)+,.FOFS(a3)
		.FOFS:	SET .FOFS+SCROLL_LEN
;		.FOFS:	SET .FOFS+40
		ENDR
		lea		2(a3),a3
		bra.s	.siLoop
.siEnd:
		rts


;@generated-datagen-start----------------
; This code was generated by Amiga Assembly extension
;
;----- parameters : modify ------
;expression(x as variable): round(sin(x*2*pi/256)*pow(2,14))
;variable:
;   name:x
;   startValue:0
;   endValue:255
;   step:1
;outputType(B,W,L): W
;outputInHex: true
;valuesPerLine: 0
;--------------------------------
;- DO NOT MODIFY following lines -
 ; -> SIGNED values <-
 dc.w $0000, $0192, $0324, $04b5, $0646, $07d6, $0964, $0af1, $0c7c, $0e06, $0f8d, $1112, $1294, $1413, $1590, $1709, $187e, $19ef, $1b5d, $1cc6, $1e2b, $1f8c, $20e7, $223d, $238e, $24da, $2620, $2760, $289a, $29ce, $2afb, $2c21, $2d41, $2e5a, $2f6c, $3076, $3179, $3274, $3368, $3453, $3537, $3612, $36e5, $37b0, $3871, $392b, $39db, $3a82, $3b21, $3bb6, $3c42, $3cc5, $3d3f, $3daf, $3e15, $3e72, $3ec5, $3f0f, $3f4f, $3f85, $3fb1, $3fd4, $3fec, $3ffb, $4000, $3ffb, $3fec, $3fd4, $3fb1, $3f85, $3f4f, $3f0f, $3ec5, $3e72, $3e15, $3daf, $3d3f, $3cc5, $3c42, $3bb6, $3b21, $3a82, $39db, $392b, $3871, $37b0, $36e5, $3612, $3537, $3453, $3368, $3274, $3179, $3076, $2f6c, $2e5a, $2d41, $2c21, $2afb, $29ce, $289a, $2760, $2620, $24da, $238e, $223d, $20e7, $1f8c, $1e2b, $1cc6, $1b5d, $19ef, $187e, $1709, $1590, $1413, $1294, $1112, $0f8d, $0e06, $0c7c, $0af1, $0964, $07d6, $0646, $04b5, $0324, $0192, $0000, $fe6e, $fcdc, $fb4b, $f9ba, $f82a, $f69c, $f50f, $f384, $f1fa, $f073, $eeee, $ed6c, $ebed, $ea70, $e8f7, $e782, $e611, $e4a3, $e33a, $e1d5, $e074, $df19, $ddc3, $dc72, $db26, $d9e0, $d8a0, $d766, $d632, $d505, $d3df, $d2bf, $d1a6, $d094, $cf8a, $ce87, $cd8c, $cc98, $cbad, $cac9, $c9ee, $c91b, $c850, $c78f, $c6d5, $c625, $c57e, $c4df, $c44a, $c3be, $c33b, $c2c1, $c251, $c1eb, $c18e, $c13b, $c0f1, $c0b1, $c07b, $c04f, $c02c, $c014, $c005, $c000, $c005, $c014, $c02c, $c04f, $c07b, $c0b1, $c0f1, $c13b, $c18e, $c1eb, $c251, $c2c1, $c33b, $c3be, $c44a, $c4df, $c57e, $c625, $c6d5, $c78f, $c850, $c91b, $c9ee, $cac9, $cbad, $cc98, $cd8c, $ce87, $cf8a, $d094, $d1a6, $d2bf, $d3df, $d505, $d632, $d766, $d8a0, $d9e0, $db26, $dc72, $ddc3, $df19, $e074, $e1d5, $e33a, $e4a3, $e611, $e782, $e8f7, $ea70, $ebed, $ed6c, $eeee, $f073, $f1fa, $f384, $f50f, $f69c, $f82a, $f9ba, $fb4b, $fcdc, $fe6e
;@generated-datagen-end----------------


